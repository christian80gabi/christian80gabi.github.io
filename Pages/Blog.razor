@page "/blog-internal"
@using christian80gabi.github.io.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Blog</PageTitle>

<section class="ftco-section">
    <div class="container">
        <div class="row justify-content-center mb-5 pb-5">
            <div class="col-md-7 heading-section text-center" data-aos="fade-in">
                <h2 class="mb-4">Blog</h2>
                <p>Because behind every project, there is a <span class="text-success">story</span> worth telling.</p>
            </div>
        </div>
        @if (_posts == null)
        {
            <Spinner />
        }
        else
        {
            <div class="row row-cols-1 row-cols-md-3 g-4">
                @foreach (var post in _posts)
                {
                    <div class="col">
                        <div class="card h-100" @onclick="@(() => NavigateToPost(post))">
                            <img src="@post.Cover" class="card-img-top m-1" alt="Post-Image">
                            <div class="card-body">
                                <h5 class="card-title">@post.Title</h5>
                                <p class="card-text">@foreach(var tag in @post.Tags) { <span class="badge text-bg-light m-2"><code>@tag</code></span> }</p>
                            </div>
                            <div class="card-footer">
                                <small class="text-body-secondary fst-italic">@post.Date.ToLongDateString()</small>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        <div class="container shadow mt-5 pt-5 pb-5 rounded" data-aos="fade-in">
            <div class="text-center" >
                <h2><span>More</span> posts are available for reading</h2>
                <p class="mb-0"><a href="blog" class="btn btn-primary py-3 px-5">Here</a></p>
            </div>
        </div>        
    </div>
</section>


@code {
    private List<Post>? _posts;

    protected override async Task OnInitializedAsync()
    {
        _posts = await Http.GetFromJsonAsync<List<Post>>("data/posts.json");
        Post.Posts = _posts ?? Post.Posts;
        
        foreach (var post in Post.Posts)
        {
            try
            {
                post.MarkdownContent = await Http.GetStringAsync(post.MarkdownFile);
            }
            catch (Exception)
            {
                // ignored
            }
        }
    }

    private void NavigateToPost(Post post)
    {
        NavigationManager.NavigateTo($"/post/{post.Id}");
    }
}
